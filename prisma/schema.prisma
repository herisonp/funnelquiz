// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
}

model Quiz {
  id          String   @id @default(cuid())
  title       String
  description String?
  isPublished Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  steps     Step[]
  responses Response[]

  @@map("quizzes")
}

model Step {
  id     String @id @default(cuid())
  title  String
  order  Int
  quizId String

  quiz     Quiz      @relation(fields: [quizId], references: [id], onDelete: Cascade)
  elements Element[]

  @@map("steps")
}

model Element {
  id      String      @id @default(cuid())
  type    ElementType
  content Json
  order   Int
  stepId  String

  step Step @relation(fields: [stepId], references: [id], onDelete: Cascade)

  @@map("elements")
}

model Response {
  id        String   @id @default(cuid())
  quizId    String
  createdAt DateTime @default(now())

  quiz    Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
  answers Answer[]

  @@map("responses")
}

model Answer {
  id         String @id @default(cuid())
  responseId String
  elementId  String
  value      Json

  response Response @relation(fields: [responseId], references: [id], onDelete: Cascade)

  @@map("answers")
}

enum ElementType {
  TEXT
  MULTIPLE_CHOICE
  NAVIGATION_BUTTON
}
